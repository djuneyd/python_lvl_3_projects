from telebot import TeleBot
from config import *
from simple_gpt_yandex import *
from database import *

bot = TeleBot(TOKEN)

@bot.message_handler(commands=['start', 'help'])
def greeting(message):
    bot.send_message(message.chat.id, '''–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ò–ì–†–£ –ö–¢–û –•–û–ß–ï–¢ –°–¢–ê–¢–¨ –ú–ò–õ–õ–ò–û–ù–ï–†–û–ú!üé≤
–¶–ï–õ–¨ –ò–ì–†–´ –û–¢–í–ï–¢–ò–¢–¨ –ù–ê 5 –í–û–ü–†–û–°–û–í –ò –ó–ê–ë–†–ê–¢–¨ –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–´–ô –í–´–ò–ì–†–´–®!
/new_game - –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—Éüí∞
/check_balance - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å.üí∞''')
    
    data = ()
    if message.from_user.id not in tracker.select_data('SELECT user_id FROM user_stats', data)[0]:
        tracker.executemany('INSERT INTO user_stats (user_id, username, total_money) VALUES (?, ?, ?)', (message.from_user.id, message.from_user.username, 0))

ingame_info = {}
@bot.message_handler(commands=['new_game'])
def game_start(message):
    global ingame_info
    ingame_info[f'{message.from_user.id}money'] = 1000
    ingame_info[f'{message.from_user.id}questionc'] = 1
    ingame_info[f'{message.from_user.id}quest'] = ''
    ingame_info[f'{message.from_user.id}quest'] = gpt('–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å')
    bot.send_message(message.chat.id, f'''–í–û–ü–†–û–° –ù–û–ú–ï–† {ingame_info[f'{message.from_user.id}questionc']} –ó–ê {ingame_info[f'{message.from_user.id}money']}$: 
{ingame_info[f'{message.from_user.id}quest']}''')
    ingame_info[f'{message.from_user.id}questionc']+=1
    bot.register_next_step_handler(message, question_repetition)

def question_repetition(message):
    # print('entered')
    global ingame_info
    gpt_response = checking(message.text, ingame_info[f'{message.from_user.id}quest'])
    #print(gpt_response)
    if gpt_response == False:
        print('error')
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: gpt –Ω–µ –æ—Ç–≤–µ—Ç–∏–ªüò≠. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—É—é –∏–≥—Ä—É.")
    elif '–¥–∞' in gpt_response:
        if ingame_info[f'{message.from_user.id}questionc'] == 6:
            bot.send_message(message.chat.id, f'–ü–û–ë–ï–î–ê‚ùó, –°—á—ë—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ +{ingame_info[f'{message.from_user.id}money']}$')

            current_money = tracker.select_data(f'SELECT total_money FROM user_stats WHERE user_id = {message.from_user.id}', ())[0][0]
            tracker.executemany(f'UPDATE user_stats SET total_money = {current_money+ingame_info[f'{message.from_user.id}money']} WHERE user_id = {message.from_user.id}', ())
        else:
            bot.send_message(message.chat.id, f'''–ü–†–ê–í–ò–õ–¨–ù–´–ô –û–¢–í–ï–¢‚ùó
    –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? –î–∞/–ù–µ—Ç:''')
            bot.register_next_step_handler(message, continue_or_stop)
    else:
        bot.send_message(message.chat.id, '–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ‚ùó –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–µ–Ω—å–≥–∏ —Å–≥–æ—Ä–µ–ª–∏. üò•')

def continue_or_stop(message):
    global ingame_info
    answer = message.text.strip().lower()
    if answer == '–¥–∞':
        ingame_info[f'{message.from_user.id}quest'] = gpt('–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å')
        ingame_info[f'{message.from_user.id}money'] = int(ingame_info[f'{message.from_user.id}money']*(1.65**ingame_info[f'{message.from_user.id}questionc']))
        bot.send_message(message.chat.id, f'''–í–û–ü–†–û–° –ù–û–ú–ï–† {ingame_info[f'{message.from_user.id}questionc']} –ó–ê {ingame_info[f'{message.from_user.id}money']}üí≤:
    {ingame_info[f'{message.from_user.id}quest']}''')
        ingame_info[f'{message.from_user.id}questionc'] += 1
        bot.register_next_step_handler(message, question_repetition)
    elif answer == '–Ω–µ—Ç':
        bot.send_message(message.chat.id, f'–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞‚ùó –í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ +{ingame_info[f'{message.from_user.id}money']}')

        current_money = tracker.select_data(f'SELECT total_money FROM user_stats WHERE user_id = {message.from_user.id}', ())[0][0]
        tracker.executemany(f'UPDATE user_stats SET total_money = {current_money+ingame_info[f'{message.from_user.id}money']} WHERE user_id = {message.from_user.id}', ())
    else:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –î–∞ –∏–ª–∏ –ù–µ—Ç‚ùó')
        bot.register_next_step_handler(message, continue_or_stop)

@bot.message_handler(commands=['check_balance'])
def check_balance(message):
    current_money = tracker.select_data(f'SELECT total_money FROM user_stats WHERE user_id = {message.from_user.id}', ())[0][0]
    bot.send_message(message.chat.id, f'–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {current_money}$')

@bot.message_handler(commands=['leaderboard'])
def view_leaderboard(message):
    res = tracker.select_data('SELECT username, total_money FROM user_stats ORDER BY total_money DESC LIMIT 10')
    leaderboard = ['–¢–û–ü 10 –ë–û–ì–ê–¢–ï–ô–®–ò–• –ì–ï–ù–ò–ï–í‚ùó \n', '\n']
    for i in range(len(res)):
        leaderboard.append(f'{i+1}) @{res[i][0]}: {res[i][1]}$ \n')       
    bot.send_message(message.chat.id, ''.join(leaderboard))
    
if __name__ == '__main__':
    tracker = MoneyTracker(DATABASE)
    tracker.create_table()
    bot.infinity_polling()