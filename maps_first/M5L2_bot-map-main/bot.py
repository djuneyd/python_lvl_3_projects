import telebot
from config import *
from logic import *
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import requests

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def handle_start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≥–æ—Ä–æ–¥–∞ –Ω–∞ –∫–∞—Ä—Ç–µ. –ù–∞–ø–∏—à–∏ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")

commands = ['/start - –Ω–∞—á–∞—Ç—å\n', '/help - –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã\n', '/show_city - –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫–æ–π—Ç–æ –≥–æ—Ä–æ–¥ –Ω–∞ –∫–∞—Ä—Ç–µ\n', '/remember_city - –¥–æ–±–∞–≤–∏—Ç—å –≥–æ—Ä–æ–¥ –≤ –≤–∞—à —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤\n', '/show_my_cities - –æ—Ç—Ä–∏—Å–æ–≤–∞—Ç—å –≤–∞—à —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤\n']
commands = ''.join(commands)
@bot.message_handler(commands=['help'])
def handle_help(message):
    global commands
    bot.send_message(message.chat.id, f"""–ü—Ä–∏–≤–µ—Ç! –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
{commands}                     """)

def color_markup(chat_id):
    data = 'color'
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton('üîµ', callback_data=f'{data} Blue'))
    markup.add(InlineKeyboardButton('üî¥', callback_data=f'{data} Red'))
    markup.add(InlineKeyboardButton('üü¢', callback_data=f'{data} Green'))
    bot.send_message(chat_id,f"–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç –º–∞—Ä–∫–µ—Ä–æ–≤!", reply_markup=markup)

goroda = []
@bot.message_handler(commands=['show_city'])
def handle_show_city(message):
    # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É
    city_name = message.text.split()[-1].capitalize()
    goroda.append(city_name)
    color_markup(message.chat.id)

@bot.message_handler(commands=['remember_city'])
def handle_remember_city(message):
    user_id = message.chat.id
    city_name = message.text.split()[-1].capitalize()
    if manager.add_city(user_id, city_name):
        bot.send_message(message.chat.id, f'–ì–æ—Ä–æ–¥ {city_name} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!')
    else:
        bot.send_message(message.chat.id, '–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ —è –Ω–µ –∑–Ω–∞—é. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –æ–Ω –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º!')

@bot.message_handler(commands=['show_my_cities'])
def handle_show_visited_cities(message):
    global goroda
    # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É
    cities = manager.select_cities(message.chat.id)
    goroda = cities
    color_markup(message.chat.id)

    
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    global goroda
    # —É–¥–∞–ª–µ–Ω–∏–µ –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤—ã
    bot.delete_message(call.message.chat.id, call.message.message_id)
    # –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
    key_word = call.data.split()[0]
    # –æ–±—Ä–∞–±–æ—Ç–∫–∞
    if key_word == 'color':
        # –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
        color = call.data.split()[1]
        manager.create_grapf('maps_first/map.png', goroda, color)
        # –≤—Ä–µ–º—è
        try:
            if len(goroda) == 1:
                conn = sqlite3.connect(manager.database)
                with conn:
                    cursor = conn.cursor()
                    cursor.execute('''SELECT country
                                    FROM cities  
                                    WHERE city = ?''', (*goroda,))
                    country = cursor.fetchone()
                country = country[0][0:2].upper()
                url = 'https://api.openweathermap.org/data/2.5/weather?q='+goroda[0]+', '+country+'&units=metric&lang=ru&appid=79d1ca96933b0328e1c7e3e7a26cb347'
                print(url)
                weather_data = requests.get(url).json()
                temperature = round(weather_data['main']['temp'])
                temperature_feels = round(weather_data['main']['feels_like'])
                forecast = [goroda[0], str(temperature), str(temperature_feels)]
                bot.send_message(call.message.chat.id, f'–ì–æ—Ä–æ–¥: {forecast[0]}, –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {forecast[1]}¬∞C, –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {forecast[2]}¬∞C')
        except:
            goroda = []
        goroda = []

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç—É
        bot.send_document(call.message.chat.id, open('maps_first/map.png', 'rb'))

if __name__=="__main__":
    manager = DB_Map(DATABASE)
    bot.polling()
