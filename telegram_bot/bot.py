import config
from class_dz import Dog
import random
from logic import Pokemon, Wizard, Fighter
print('Bot is active!')

#!/usr/bin/python

# This is a simple echo bot using the decorator mechanism.
# It echoes any incoming text messages.

import telebot

API_TOKEN = config.token

bot = telebot.TeleBot(API_TOKEN)


# Handle '/start' and '/help'
@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    bot.reply_to(message, """\
–ü—Ä–∏–≤–µ—Ç, —è –≠—Ö–æ–ë–æ—Ç.
–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–∞—à–∏ –¥–æ–±—Ä—ã–µ —Å–ª–æ–≤–∞ –≤ –≤–∞—à –∞–¥—Ä–µ—Å. –ü—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –ø—Ä–∏—è—Ç–Ω–æ–µ, –∏ —è —Å–∫–∞–∂—É —Ç–µ–±–µ —Ç–æ –∂–µ —Å–∞–º–æ–µ!üòé\
""")
    bot.reply_to(message, """\
–ù–ï–ö–û–¢–û–†–´–ï –ö–û–ú–ê–ù–î–´!üòâ
/dog - —Å–¥–µ–ª–∞—Ç—å —Å–æ–±–∞—á–∫—É, —Ä—è–¥–æ–º —É–∫–∞–∂–∏—Ç–µ –∏–º—è, –ø–æ—Ä–æ–¥—É –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Äüê∂
/dice - –∫–∏–Ω—É—Ç—å –∏–≥—Ä–∞–ª—å–Ω—É—é –∫–æ—Å—Ç—åüé≤
/ban - –∑–∞–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≥—Ä—É–ø–ø—ã –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µüí©
/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µüòä
/help - –ø–æ–º–æ—â—å —Å –∫–æ–º–∞–Ω–¥–∞–º–∏‚ù§
/go - –ò–ì–†–ê –í POKEMON GO!ü§©\
                 
–Ø —Ç–∞–∫–∂–µ –ø–µ—Ä–µ—Å—ã–ª–∞—é –≤–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –º–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µüòÅ
""")

#get info
@bot.message_handler(commands=['info'])
def information(message):
    bot.reply_to(message, '–Ø –ø–æ–≤—Ç–æ—Ä—é—à–∞ –¥—è–¥—è —Ö—Ä—é—à–∞üê∑')

#make a doggy
@bot.message_handler(commands=['dog'])
def dog_creator(message):
    arguments = telebot.util.extract_arguments(message.text)
    arguments = arguments.split(' ')
    bobby = Dog(arguments[0], arguments[1], arguments[2])
    bot.reply_to(message, bobby.info())


#throw a dice
stickers = ['CAACAgIAAxkBAAEMB2BmMTRrAAGUBjrhLQWylq4k_9HU-YQAAosVAALvokhL3DAhhLVmmaA0BA',
            'CAACAgIAAxkBAAEMB2JmMTRx5zoGBuExLcmX0L-jXN7FRAACzxEAAlKRQEtOAAGmnvjK7y80BA',
            'CAACAgIAAxkBAAEMB2VmMTR2Acjyi9Q0hfAAARa60VLory4AAkARAAIjrEFLq5rcPQrrUd80BA',
            'CAACAgIAAxkBAAEMB2dmMTR5VDH774vVy7I9FRt4u-_K3wACcREAAuzsQUu1GqzW_T-jpDQE',
            'CAACAgIAAxkBAAEMB2pmMTR8PBGoIUvABEz3n0QfQdr3kAACoQ8AAkG1QUtuwcKEzQGhITQE',
            'CAACAgIAAxkBAAEMB3BmMTR_48NtSA62WmzZMRGoIVciRQAC9g0AAvetSEtWDywqQrcoYzQE']

@bot.message_handler(commands=['dice'])
def throw_a_dice(message):
    global stickers
    bot.send_sticker(message.chat.id, random.choice(stickers))

#clear ban function
@bot.message_handler(commands=['ban'])
def ban_user(message):
    if message.reply_to_message: #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ 
        chat_id = message.chat.id # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ id —á–∞—Ç–∞
         # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ id –∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        user_id = message.reply_to_message.from_user.id
        user_status = bot.get_chat_member(chat_id, user_id).status 
         # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_status == 'administrator' or user_status == 'creator':
            bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        else:
            bot.ban_chat_member(chat_id, user_id) # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å user_id –±—É–¥–µ—Ç –∑–∞–±–∞–Ω–µ–Ω –≤ —á–∞—Ç–µ —Å chat_id
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.reply_to_message.from_user.username} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω, –ø–æ–∫–∞!üòÅ")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å.")

#resender photos
@bot.message_handler(content_types=['photo'])
def photo(message):   
    fileID = message.photo[-1].file_id   
    file_info = bot.get_file(fileID)
    downloaded_file = bot.download_file(file_info.file_path)
    with open("image.jpg", 'wb') as new_file:
         new_file.write(downloaded_file)
    photo = open('image.jpg', 'rb')
    bot.send_photo(message.chat.id, photo)
    bot.send_message(message.chat.id, '–Ø –∑–Ω–∞—é —á—Ç–æ —Ç—ã –º–Ω–µ –∫–∏–¥–∞–µ—à—åüòâ')

#new members
@bot.message_handler(content_types=['new_chat_members'])
def make_some(message):
    bot.send_message(message.chat.id, '–Ø –ø—Ä–∏–Ω—è–ª –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞!ü•∞')
    bot.approve_chat_join_request(message.chat.id, message.from_user.id)

snacks = 0
counter = 0
pokemon = 0
@bot.message_handler(commands=['go'])
def go(message):
    global snacks, pokemon
    if message.from_user.username not in Pokemon.pokemons.keys():
        chance = random.randint(1,3)
        if chance == 1:
            pokemon = Pokemon(message.from_user.username)
        elif chance == 2:
            pokemon = Wizard(message.from_user.username)
        elif chance == 3:
            pokemon = Fighter(message.from_user.username)
        bot.send_message(message.chat.id, pokemon.info())
        bot.send_message(message.chat.id, '–û–±—ã—á–Ω–∞—è –≤–µ—Ä—Å–∏—è')
        bot.send_photo(message.chat.id, pokemon.show_img()[0])
        bot.send_message(message.chat.id, '–°–≤–µ—Ç—è—â–∞—è—Å—è –≤–µ—Ä—Å–∏—è')
        bot.send_photo(message.chat.id, pokemon.show_img()[1])
        bot.send_message(message.chat.id, f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∫—É—Å–Ω—è—à–µ–∫: {snacks}. –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–∫—É—Å–Ω—è—à–∫—É, –Ω–∞–ø–∏—à–∏—Ç–µ "–í–ö–£–°–ù–Ø–®–ö–ê" 10 —Ä–∞–∑. (—Å –∏—Ö –ø–æ–º–æ—â—å—é –º–æ–∂–Ω–æ —É–ª—É—á—à–∞—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞)')
        bot.send_message(message.chat.id, f'–ê–¢–ê–ö–û–í–ê–¢–¨ –ö–û–ì–û-–¢–û‚öî: /attack')
        bot.send_message(message.chat.id, f'–ü—Ä–æ–∫–∞—á–∞—Ç—å –ª–µ–≤–µ–ª: /lvlup')
    else:
        bot.reply_to(message, "–¢—ã —É–∂–µ —Å–æ–∑–¥–∞–ª —Å–µ–±–µ –ø–æ–∫–µ–º–æ–Ω–∞")

@bot.message_handler(commands=['attack'])
def attack_pok(message):
    if message.reply_to_message:
        if message.reply_to_message.from_user.username in Pokemon.pokemons.keys() and message.from_user.username in Pokemon.pokemons.keys():
            enemy = Pokemon.pokemons[message.reply_to_message.from_user.username]
            pok = Pokemon.pokemons[message.from_user.username]
            res = pok.fight(enemy)
            bot.send_message(message.chat.id, res)
        else:
            bot.send_message(message.chat.id, "–°—Ä–∞–∂–∞—Ç—å—Å—è –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Å –ø–æ–∫–µ–º–æ–Ω–∞–º–∏")
    else:
            bot.send_message(message.chat.id, "–ß—Ç–æ–±—ã –∞—Ç–∞–∫–æ–≤–∞—Ç—å, –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–æ–≥–æ, –∫–æ–≥–æ —Ö–æ—á–µ—à—å –∞—Ç–∞–∫–æ–≤–∞—Ç—å")
@bot.message_handler(commands=['lvlup'])
def lvlup(message):
    global snacks, pokemon
    if message.from_user.username in Pokemon.pokemons.keys() and snacks > 0:
        pokemon.level += 1
        pokemon.hp += random.randint(1,100)
        pokemon.damage += random.randint(1,100)
        snacks -= 1
        bot.send_message(message.chat.id, f'–õ–µ–≤–µ–ª –ø–æ–∫–µ–º–æ–Ω–∞ –ø–æ–≤—ã—à–µ–Ω! –ü—Ä–æ–∏–∑–æ—à–ª–æ —Å–ª—É—á–∞–π–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫!')
        bot.send_message(message.chat.id, pokemon.info())
        bot.send_message(message.chat.id, f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∫—É—Å–Ω—è—à–µ–∫: {snacks}. –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–∫—É—Å–Ω—è—à–∫—É, –Ω–∞–ø–∏—à–∏—Ç–µ "–í–ö–£–°–ù–Ø–®–ö–ê" 10 —Ä–∞–∑. (—Å –∏—Ö –ø–æ–º–æ—â—å—é –º–æ–∂–Ω–æ —É–ª—É—á—à–∞—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞)')
        bot.send_message(message.chat.id, f'–ü—Ä–æ–∫–∞—á–∞—Ç—å –ª–µ–≤–µ–ª: /lvlup')
        bot.send_message(message.chat.id, f'–ê–¢–ê–ö–û–í–ê–¢–¨ –ö–û–ì–û-–¢–û‚öî: /attack')
    else:
        bot.send_message(message.chat.id, f'–ù–ï–î–û–°–¢–ê–¢–û–ß–ù–û –í–ö–£–°–ù–Ø–®–ï–ö –ò–õ–ò –ù–ï–¢–£ –ü–û–ö–ï–ú–û–ù–ê!')

# Handle all other messages with content_type 'text' (content_types defaults to ['text']) and ban function for links
@bot.message_handler(func=lambda message: True)
def echo_message(message):
    global counter, snacks
    if 'https://' in message.text:
        chat_id = message.chat.id # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ id —á–∞—Ç–∞
         # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ id –∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        user_id = message.reply_to_message.from_user.id
        user_status = bot.get_chat_member(chat_id, user_id).status 
        if user_status == 'administrator' or user_status == 'creator':
            bot.reply_to(message, "–ê–¥–º–∏–Ω, –Ω–µ —à–∞–ª–∏üò§")
        else:
            bot.ban_chat_member(chat_id, user_id) # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å user_id –±—É–¥–µ—Ç –∑–∞–±–∞–Ω–µ–Ω –≤ —á–∞—Ç–µ —Å chat_id
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.reply_to_message.from_user.username} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –∑–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫.")
    elif message.text == '–í–ö–£–°–ù–Ø–®–ö–ê':
        counter+=1
    else:
        bot.reply_to(message, message.text)
    if counter == 10:
        snacks+=1
        counter = 0
        bot.send_message(message.chat.id, f'–ü–æ–ª—É—á–µ–Ω–∞ –≤–∫—É—Å–Ω—è—à–∫–∞!')
        bot.send_message(message.chat.id, f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∫—É—Å–Ω—è—à–µ–∫: {snacks}. –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–∫—É—Å–Ω—è—à–∫—É, –Ω–∞–ø–∏—à–∏—Ç–µ "–í–ö–£–°–ù–Ø–®–ö–ê" 10 —Ä–∞–∑. (—Å –∏—Ö –ø–æ–º–æ—â—å—é –º–æ–∂–Ω–æ —É–ª—É—á—à–∞—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞)')
        bot.send_message(message.chat.id, f'–ü—Ä–æ–∫–∞—á–∞—Ç—å –ª–µ–≤–µ–ª: /lvlup')
    
    print(message.text)



bot.infinity_polling()